/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* global getAssetRegistry getFactory emit */

/**
 * Sample transaction processor function.
 * @param {org.hotel.network.RoomBooking} tx The sample transaction instance.
 * @transaction
 */
async function sampleTransaction(tx) {  // eslint-disable-line no-unused-vars

    tx.roomId.guestId = tx.guestId;
    tx.roomId.permanence = tx.permanence;
    tx.roomId.access_code = generateAccessCode();

    // Get the asset registry for the asset.
    const assetRegistry = await getAssetRegistry('org.hotel.network.Room');
    // Update the asset in the asset registr.
    await assetRegistry.update(tx.roomId);
}

function generateAccessCode(){
  	var elencoCaratteri="1234567890ABCD";

	//var minimoCaratteri=1;
	//var massimoCaratteri=7;
	//var differenzaCaratteri=massimoCaratteri-minimoCaratteri;

	var lunghezza=4   //Math.round((Math.random()*differenzaCaratteri)+minimoCaratteri);

	var incremento=0;
	var password=0;

	while(incremento<lunghezza){
	   password+=elencoCaratteri.charAt(Math.round(Math.random()*elencoCaratteri.length));
	   incremento++;
	}
  
  return password;
}

